[{"name":"Model","text":["Bases: bokeh.core.has_props.HasProps, bokeh.util.callback_manager.CallbackManager","Base class for all objects stored in Bokeh Document instances."],"attrs":[{"name":"js_callbacks","descs":["property type: Dict ( String , List ( Instance ( CustomJS  ) ) )","A mapping of attribute names to lists of CustomJS callbacks, to be set up on\nBokehJS side when the document is created.","Typically, rather then modifying this property directly, callbacks should be\nadded using the Model.js_on_change method:"]},{"name":"name","descs":["property type: String","An arbitrary, user-supplied name for this model.","This name can be useful when querying the document to retrieve specific\nBokeh models."]},{"name":"tags","descs":["property type: List ( Any  )","An optional list of arbitrary, user-supplied values to attach to this\nmodel.","This data can be useful when querying the document to retrieve specific\nBokeh models:","Or simply a convenient way to attach any necessary metadata to a model\nthat can be accessed by CustomJS callbacks, etc."]},{"name":"document","descs":[]},{"name":"ref","descs":[]}],"json":"{\n  \"id\": \"ca214b1b-b6e5-4f1e-90d7-2588bcb83099\",\n  \"js_callbacks\": {},\n  \"name\": null,\n  \"tags\": []\n}\n\n\n  "},{"name":"Viewable","text":["Any Bokeh Model which has its own View Model in the\npersistence layer."],"attrs":[],"json":""}]